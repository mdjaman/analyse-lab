package com.mdjaman.lab.entity;
// Generated Nov 29, 2014 1:04:21 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Visite generated by hbm2java
 */
@Entity
@Table(name="visite"
    ,catalog="labo_db"
)
public class Visite  implements java.io.Serializable {


     private Long id;
     private Patient patient;
     private Personnel personnel;
     private Prescripteur prescripteur;
     private Utilisateur utilisateur;
     private String code;
     private String typePatient;
     private String obvservation;
     private Set factures = new HashSet(0);

    public Visite() {
    }

	
    public Visite(Patient patient, Personnel personnel, Utilisateur utilisateur, String code, String typePatient) {
        this.patient = patient;
        this.personnel = personnel;
        this.utilisateur = utilisateur;
        this.code = code;
        this.typePatient = typePatient;
    }
    public Visite(Patient patient, Personnel personnel, Prescripteur prescripteur, Utilisateur utilisateur, String code, String typePatient, String obvservation, Set factures) {
       this.patient = patient;
       this.personnel = personnel;
       this.prescripteur = prescripteur;
       this.utilisateur = utilisateur;
       this.code = code;
       this.typePatient = typePatient;
       this.obvservation = obvservation;
       this.factures = factures;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="patient_id", nullable=false)
    public Patient getPatient() {
        return this.patient;
    }
    
    public void setPatient(Patient patient) {
        this.patient = patient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="homologue_par", nullable=false)
    public Personnel getPersonnel() {
        return this.personnel;
    }
    
    public void setPersonnel(Personnel personnel) {
        this.personnel = personnel;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="prescripteur_id")
    public Prescripteur getPrescripteur() {
        return this.prescripteur;
    }
    
    public void setPrescripteur(Prescripteur prescripteur) {
        this.prescripteur = prescripteur;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="utilisateur_id", nullable=false)
    public Utilisateur getUtilisateur() {
        return this.utilisateur;
    }
    
    public void setUtilisateur(Utilisateur utilisateur) {
        this.utilisateur = utilisateur;
    }

    
    @Column(name="code", nullable=false, length=20)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

    
    @Column(name="type_patient", nullable=false, length=2)
    public String getTypePatient() {
        return this.typePatient;
    }
    
    public void setTypePatient(String typePatient) {
        this.typePatient = typePatient;
    }

    
    @Column(name="obvservation")
    public String getObvservation() {
        return this.obvservation;
    }
    
    public void setObvservation(String obvservation) {
        this.obvservation = obvservation;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="visite")
    public Set getFactures() {
        return this.factures;
    }
    
    public void setFactures(Set factures) {
        this.factures = factures;
    }




}


